name: Release Version

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'The version to release (e.g., 1.2.3)'
        required: true
      next_development_version:
        description: 'The next development version (e.g., 1.3.0-SNAPSHOT)'
        required: true

jobs:
  release:
    name: Release to Maven Central and GitHub
    if: github.actor == 'cbarlin' && github.triggering_actor == 'cbarlin'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Java and Maven Central credentials
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          server-id: 'central'
          gpg-private-key: ${{ secrets.GPG_SIGNING_KEY }}
          server-username: ${{ secrets.MVN_USERNAME }}
          server-password: ${{ secrets.MVN_PASSWORD }}
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Configure Git User
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run Maven Release
        run: |
          mvn -B -Prelease \
            -DreleaseVersion=${{ github.event.inputs.release_version }} \
            -DdevelopmentVersion=${{ github.event.inputs.next_development_version }} \
            -DscmCommentPrefix="[maven-release-plugin][skip ci] " \
            release:prepare release:perform
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock # Ensure Maven uses the agent socket setup above
          SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }} # Passphrase for the SSH key if it's encrypted
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.release_version }}
          release_name: Release ${{ github.event.inputs.release_version }}
          body: |
            Released version ${{ github.event.inputs.release_version }}.
            See commit history for details.
            Released by GitHub Actions.
            Triggered by @${{ github.actor }}.
          draft: false
          prerelease: false